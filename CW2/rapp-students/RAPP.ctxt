#BlueJ class context
comment0.target=RAPP
comment0.text=\n\ interface\ RAPP\ specifies\ requirements\ for\ 7COM1015\ Cwk\ 2\n\ \n\ @author\ Aidan\ Carvalho\n\ @version\ 11/12/2023\n
comment1.params=
comment1.target=java.lang.String\ toString()
comment1.text=\n\ Returns\ all\ of\ the\ details\ of\ the\ park\:\ its\ name\ and\ its\ zones\n\ including\ lists\ of\ passes\ in\ each\ zone.\n
comment2.params=passId
comment2.target=java.lang.String\ getPassDetails(int)
comment2.text=\n\ Returns\ a\ String\ with\ details\ of\ a\ pass\n\ \n\ @param\ passId\ -\ id\ number\ of\ the\ pass\n\ @return\ the\ details\ of\ the\ pass\ as\ a\ String,\ or\ "No\ such\ pass"\n
comment3.params=cd
comment3.target=java.lang.String\ getPassLocation(int)
comment3.text=\n\ Returns\ the\ name\ of\ the\ zone\ which\ contains\ the\ specified\ pass\ or\ null\n\ \n\ @param\ ccd\ -\ the\ specified\ pass\n\ @return\ the\ name\ of\ the\ Zone\ which\ contains\ the\ pass,\ or\ null\n
comment4.params=ww
comment4.target=int\ getZoneNumber(java.lang.String)
comment4.text=\n\ Given\ the\ name\ of\ a\ zone,\ returns\ the\ zone\ id\ number\n\ or\ -1\ if\ zone\ does\ not\ exist\n\ \n\ @param\ name\ of\ zone\n\ @return\ id\ number\ of\ zone\n
comment5.params=zone
comment5.target=java.lang.String\ getAllPassesInOneZone(java.lang.String)
comment5.text=\n\ Returns\ a\ String\ representation\ of\ all\ the\ passes\ on\ specified\ zone\n\ \n\ @param\ zone\ is\ the\ name\ of\ the\ zone\n\ @return\ a\ String\ representation\ of\ all\ passes\ on\ specified\ zone\n
comment6.params=trId\ znCode
comment6.target=boolean\ canMove(int,\ java.lang.String)
comment6.text=\n\ Returns\ true\ if\ a\ Pass\ is\ allowed\ to\ move\ using\ the\ bridge,\ false\ otherwise\n\ A\ move\ can\ be\ made\ if\:\n\ the\ rating\ of\ the\ pass\ >\=\ the\ rating\ of\ the\ destination\ zone\n\ AND\ the\ destination\ zone\ is\ not\ full\n\ AND\ the\ pass\ has\ sufficient\ credits\n\ AND\ the\ pass\ is\ currently\ in\ the\ source\ zone\n\ AND\ the\ pass\ id\ is\ for\ a\ pass\ on\ the\ system\n\ AND\ the\ bridge\ code\ is\ the\ code\ for\ a\ bridge\ on\ the\ system\n\ \n\ @param\ trId\ \ \ is\ the\ id\ of\ the\ pass\ requesting\ the\ move\n\ @param\ znCode\ is\ the\ code\ of\ the\ bridge\ by\ which\ the\ pass\ wants\ to\ move\n\ @return\ true\ if\ the\ pass\ is\ allowed\ on\ the\ bridge\ journey,\ false\ otherwise\n
comment7.params=pPassId\ znCode
comment7.target=java.lang.String\ move(int,\ java.lang.String)
comment7.text=\n\ Returns\ the\ result\ of\ a\ pass\ requesting\ to\ move\ over\ a\ bridge.\n\ A\ move\ will\ be\ successful\ if\:\n\ the\ luxury\ rating\ of\ the\ pass\ >\=\ the\ luxury\ rating\ of\ the\ destination\ zone\n\ AND\ the\ destination\ zone\ is\ not\ full\n\ AND\ the\ pass\ has\ sufficient\ credits\n\ AND\ the\ pass\ is\ currently\ in\ the\ source\ zone\n\ AND\ the\ pass\ id\ is\ for\ a\ pass\ in\ the\ system\n\ AND\ the\ bridge\ code\ is\ the\ code\ for\ a\ bridge\ on\ the\ system\n\ If\ the\ bridge\ crossing\ can\ be\ made,\ the\ pass\ information\ is\ removed\ from\n\ the\ source\ zone,\ added\ to\ the\ destination\ zone,\ pass\ details\ updated\ and\ a\n\ suitable\ message\ returned.\n\ a\ suitable\ message\ returned.\n\ If\ bridge\ journey\ cannot\ be\ made,\ the\ state\ of\ the\ system\ remains\ unchanged\n\ and\ a\ message\ specifying\ the\ reason\ is\ returned.\n\ \n\ @param\ pPassId\ is\ the\ id\ of\ the\ pass\ requesting\ the\ move\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *\ @param\ znCode\ is\ the\ code\ of\ the\ bridge\ by\ which\ the\ pass\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ wants\ to\ move\n\ @return\ a\ String\ giving\ the\ result\ of\ the\ request\n
comment8.params=id\ creds
comment8.target=void\ topUpCredits(int,\ int)
comment8.text=\n\ Allows\ a\ pass\ to\ top\ up\ their\ credits.This\ method\ is\ not\ concerned\ with\n\ the\ cost\ of\ a\ credit\ as\ currency\ and\ prices\ may\ vary\ between\ resorts.\n\ \n\ @param\ id\ \ \ \ the\ id\ of\ the\ pass\ toping\ up\ their\ credits\n\ @param\ creds\ the\ number\ of\ credits\ purchased\ to\ be\ added\ to\ passes\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ information\n
comment9.params=cdId
comment9.target=void\ convertPoints(int)
comment9.text=\n\ Allows\ a\ pass\ to\ convert\ its\ points\ to\ credits\n\ \n\ @param\ cdId\ the\ id\ of\ the\ pass\ converting\ their\ credits\n
numComments=10
